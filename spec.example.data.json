{
	"data": [
		{
			"provider": "chrono",
			"repository": "product-profitability",
			"name": "product-profitability",
			"manifest": {
				"currency": "EUR",
				"selects": [
					"|{| string .select |}|",
					"time",
					"financial_entry_type",
					"amount"
				],
				"filters": {
					"time": {
						"between": [
							"2023-08-09",
							"2023-10-09"
						]
					}
				}
			}
		},
		{
			"provider": "chrono",
			"repository": "product-profitability",
			"name": "top-product-profitability",
			"manifest": {
				"currency": "EUR",
				"selects": [
					"|{| string .select |}|",
					"time",
					"financial_entry_type",
					"amount"
				],
				"filters": {
					"|{| string .filter |}|": {
						"eq": "|{| string .ids|}|"
					}
				}
			},
			"depends": [
				{
					"value": "procedure.top",
					"template": ".ids"
				}
			]
		}
	],
	"procedure": [
		{
			"step-name": "top",
			"procedure-name": "top.py",
			"entrypoint": "Top",
			"arguments": {
				"return": {
					"value": "|{| string .return|}|",
					"type": "string"
				}
			}
		},
		{
			"step-name": "series",
			"procedure-name": "time-series.py",
			"entrypoint": "TimeSeriesGapFill",
			"arguments": {
				"data": {
					"value": "data.top-product-profitability",
					"type": "string"
				},
				"time_column": {
					"value": "time",
					"type": "string"
				},
				"amount": {
					"value": "amount",
					"type": "string"
				},
				"group_by": {
					"value": [
						"financial_entry_type",
						"|{| string .group_by |}|"
					],
					"type": [
						"string"
					]
				}
			}
		}
	],
	"arguments": {
		"data.product-profitability.select": "bin",
		"data.top-product-profitability.filter": "bin",
		"data.top-product-profitability.select": "bin",
		"procedure.series.group_by": "bin",
		"procedure.top.return": "B098DHKXRN",
		"procedure.margin.group_by": "bin",
		"procedure.merge.group_by": "bin"
	}
}